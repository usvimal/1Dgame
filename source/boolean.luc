module boolean (
    input x[16],
    input y[16],
    input alufn[6],
    output out[16]
  ) {

  always {
    case(alufn[3-:4]) {
      b0000:out = ~x; // NOT A
      b0010:out = ~y; // NOT B
      b0100:out = ~(x^y); // XNOR
      b0110:out = x^y; // XOR
      b0111:out = ^x; // REDUCTION XOR
      b1000:out = x&y; // AND
      b1010:out = x; // A
      b1100:out = y; // B
      b1110:out = x|y; // OR
      default: out = 16b0;
    }
  }
}
